Parte 3
----------------------------------------------------------------------------------------------------------------------------------------------
backend: *el post no deberia insertar comandas sin mercaderia

bool count = body.mercaderias.Count != 0;
                bool formaEntrega = body.formaEntrega > 0 && body.formaEntrega <= 3;

                if (count && formaEntrega)
                {
                    var response = await _serviceComanda.InsertComanda(body);
                    return new JsonResult(response) { StatusCode = 201 }; 
                }
----------------------------------------------------------------------------------------------------------------------------------------------
*reemplazar [] por localStorage
----------------------------------------------------------------------------------------------------------------------------------------------
* estilos de table
----------------------------------------------------------------------------------------------------------------------------------------------
* validar name en searcher 
----------------------------------------------------------------------------------------------------------------------------------------------
* desactivar button si no se puede continuar
----------------------------------------------------------------------------------------------------------------------------------------------
*ver ASIDE del search 
----------------------------------------------------------------------------------------------------------------------------------------------
*ok. crear comanda con el buscador cuando selecciono mercaderias de distintas busquedas
----------------------------------------------------------------------------------------------------------------------------------------------
*ok.componente comandas, searcher comandas y comanda detail
----------------------------------------------------------------------------------------------------------------------------------------------
*ok colores de botones y transiciones.  
----------------------------------------------------------------------------------------------------------------------------------------------

Consigna:
Realizar una aplicación de frontend utilizando HTML, CSS y JS que cumpla con los requerimientos del cliente.
    ● Utilizar la API Rest realizada en el trabajo práctico 2 para suministrar los datos a la aplicación de Frontend.
    ● La página web debe contar con un buen diseño de UI. 
    ● La página web debe ser intuitiva para el usuario y tener una buena UX

Los criterios de aceptación son:
1.ok Interfaz web donde se muestran todas las opciones de menú que cuenta el restaurante. *Mercaderia/get (name, tipo, orden)

2.ok El usuario puede acceder al detalle de la mercadería donde se debe visualizar toda la información que esta presenta.*Mercaderia/get(id)

3.OK Se debe permitir que el usuario arme la comanda con la mercadería que desea y elegir la forma de entrega. *Comanda/post

4.ok El usuario puede realizar búsquedas, filtrados y ordenamiento de la mercadería. *Mercaderia/get (name, tipo, orden)

5. La app debe tener un sector donde se visualicen todas las comandas del día. *Comanda/get

*Mercaderia/post
*Mercaderia/put
*Mercaderia/delete
*Comanda/get(id)

----------------------------------------------------------------------------------------------------------------------------------------------

    .header div{
        display: flex;
        flex-direction: row;
        justify-content:space-around;
        align-items: center; /*vertical*/
    }


const render = () => {
    let main = document.getElementById("main");

    sectionsData.forEach(sectionData => {
        const section = document.createElement("section");
        section.id = sectionData.id;
        
        const title = document.createElement('h2');
        title.classList.add('title');
        title.textContent = sectionData.title;

        const text = document.createElement('p');
        text.classList.add('text');
        text.textContent = sectionData.text;

        const list = document.createElement('ul');
        list.classList.add('list');
        
        sectionData.listItems.forEach(item => {
            const listItem = document.createElement('li');
            listItem.textContent = item;
            
            list.appendChild(listItem);
        })

        section.appendChild(title);
        section.appendChild(text);
        section.appendChild(list);

        main.appendChild(section);
    })
}


